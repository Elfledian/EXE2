// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.AspNetCore.Identity;
using Microsoft.EntityFrameworkCore;

namespace FastWork.Entities;

[Table("users")]
[Index("Email", Name = "UQ__users__AB6E6164023178F8", IsUnique = true)]
[Index("Phone", Name = "UQ__users__B43B145FB0B35F61", IsUnique = true)]
[Index("GoogleId", Name = "UQ__users__CCBDE7DC88483CA3", IsUnique = true)]
public partial class User : IdentityUser<Guid>
{
    [Key]
    [Column("user_id")]
    public Guid UserId { get; set; }

    [Column("role")]
    [StringLength(50)]
    public string Role { get; set; }

    [Required]
    [Column("name")]
    [StringLength(100)]
    public string Name { get; set; }

    [Required]
    [Column("email")]
    [StringLength(100)]
    public string Email { get; set; }

    [Column("phone")]
    [StringLength(20)]
    public string Phone { get; set; }

    [Required]
    [Column("password_hash")]
    [StringLength(255)]
    public string PasswordHash { get; set; }

    [Column("google_id")]
    [StringLength(100)]
    public string GoogleId { get; set; }

    [Column("remember_me")]
    public bool? RememberMe { get; set; }

    [Column("terms_agreed")]
    public bool? TermsAgreed { get; set; }

    [Column("location")]
    [StringLength(100)]
    public string Location { get; set; }

    [Column("created_at", TypeName = "datetime")]
    public DateTime? CreatedAt { get; set; }

    [Column("updated_at", TypeName = "datetime")]
    public DateTime? UpdatedAt { get; set; }

    [InverseProperty("User")]
    public virtual Candidate Candidate { get; set; }

    [InverseProperty("Recruiter")]
    public virtual Company Company { get; set; }

    [InverseProperty("User")]
    public virtual ICollection<Notification> Notifications { get; set; } = new List<Notification>();

    [InverseProperty("Reviewer")]
    public virtual ICollection<Rating> Ratings { get; set; } = new List<Rating>();

    [InverseProperty("User")]
    public virtual Recruiter Recruiter { get; set; }

    [InverseProperty("User")]
    public virtual Verification Verification { get; set; }
}